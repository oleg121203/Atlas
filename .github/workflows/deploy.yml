name: Automated Deployment

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment for deployment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build paramiko boto3
    
    - name: Determine environment
      id: env
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "environment=staging" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/tags/v*" ]]; then
          echo "environment=prod" >> $GITHUB_OUTPUT
        else
          echo "environment=dev" >> $GITHUB_OUTPUT
        fi
    
    - name: Run deployment script
      env:
        ATLAS_ENCRYPTION_KEY: ${{ secrets.ATLAS_ENCRYPTION_KEY }}
        ATLAS_MASTER_KEY: ${{ secrets.ATLAS_MASTER_KEY }}
      run: |
        python scripts/deploy.py --environment ${{ steps.env.outputs.environment }} --log-level DEBUG
    
    - name: Notify on failure
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text": "Deployment to ${{ steps.env.outputs.environment }} failed. Check GitHub Actions for details."}' $SLACK_WEBHOOK_URL
    
    - name: Notify on success
      if: success()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text": "Deployment to ${{ steps.env.outputs.environment }} completed successfully."}' $SLACK_WEBHOOK_URL
